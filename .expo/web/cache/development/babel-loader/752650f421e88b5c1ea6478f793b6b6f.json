{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Win 10 Pro\\\\Desktop\\\\Git\\\\expo_project\\\\AppJoke\\\\my-app\\\\screens\\\\TabOneScreen.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Speech from 'expo-speech';\nimport { Text, View } from \"../components/Themed\";\nimport data from \"../components/battute.json\";\nvar random = new Array();\n\nvar TabOneScreen = function (_React$Component) {\n  _inherits(TabOneScreen, _React$Component);\n\n  var _super = _createSuper(TabOneScreen);\n\n  function TabOneScreen() {\n    var _this;\n\n    _classCallCheck(this, TabOneScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      joke: \"Inizia a ridere\"\n    };\n\n    _this.makeJoke = function () {\n      Speech.stop();\n\n      if (random.length >= data.length) {\n        _this.setState({\n          random: []\n        });\n      } else {\n        var casual = NaN;\n\n        do {\n          casual = Math.floor(Math.random() * (data.length - 1) + 0);\n        } while (random.includes(casual));\n\n        _this.setState({\n          joke: data[casual]\n        });\n\n        random.push(casual);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TabOneScreen, [{\n    key: \"render\",\n    value: function render() {\n      Speech.speak(this.state.joke);\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, this.state.joke), React.createElement(View, {\n        style: styles.separator,\n        lightColor: \"#eee\",\n        darkColor: \"rgba(255,255,255,0.1)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Premi\",\n        onPress: this.makeJoke,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return TabOneScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    padding: 25\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\"\n  },\n  image: {\n    width: 100\n  },\n  fadingContainer: {\n    padding: 20,\n    backgroundColor: \"powderblue\"\n  },\n  fadingText: {\n    fontSize: 28\n  },\n  buttonRow: {\n    flexBasis: 100,\n    justifyContent: \"space-evenly\",\n    marginVertical: 16\n  }\n});\nexport default TabOneScreen;","map":{"version":3,"sources":["C:/Users/Win 10 Pro/Desktop/Git/expo_project/AppJoke/my-app/screens/TabOneScreen.tsx"],"names":["React","Speech","Text","View","data","random","Array","TabOneScreen","state","joke","makeJoke","stop","length","setState","casual","NaN","Math","floor","includes","push","speak","styles","container","title","separator","Component","StyleSheet","create","flex","alignItems","justifyContent","width","fontSize","fontWeight","textAlign","padding","marginVertical","height","image","fadingContainer","backgroundColor","fadingText","buttonRow","flexBasis"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {StyleSheet, Button, Image } from \"react-native\";\nimport * as Speech from 'expo-speech';\n\nimport { Text, View } from \"../components/Themed\";\n\nimport data from \"../components/battute.json\";\n\nlet random = new Array ()\nclass TabOneScreen extends React.Component <{}>  {\n  \n  state = {\n      joke : \"Inizia a ridere\"\n    }\n\n  \n  makeJoke = () => {\n    Speech.stop()\n    if(random.length >= (data.length) ){\n      this.setState({\n        random:[]\n      })\n    }\n\n    else{\n      let casual = NaN\n      do{\n        casual = Math.floor(Math.random() * (data.length-1) + 0)\n      }while(random.includes(casual))\n      this.setState({\n        joke: data[casual],\n      });\n      random.push(casual)\n    }\n  };\n\n\n  render(){\n    Speech.speak(this.state.joke)\n    return (<View style={styles.container}>\n        <Text style={styles.title}>{this.state.joke}</Text> \n        <View\n          style={styles.separator}\n          lightColor=\"#eee\"\n          darkColor=\"rgba(255,255,255,0.1)\"\n        />\n        <Button title=\"Premi\" onPress={this.makeJoke}  />\n        </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    padding: 25,\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\",\n  },\n  image:{\n    width: 100\n  },\n  fadingContainer: {\n    padding: 20,\n    backgroundColor: \"powderblue\"\n  },\n  fadingText: {\n    fontSize: 28\n  },\n  buttonRow: {\n    flexBasis: 100,\n    justifyContent: \"space-evenly\",\n    marginVertical: 16\n  }\n});\n\nexport default TabOneScreen;\n"]},"metadata":{},"sourceType":"module"}