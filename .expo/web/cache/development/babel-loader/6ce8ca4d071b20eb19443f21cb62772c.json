{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Win 10 Pro\\\\Desktop\\\\Git\\\\expo_project\\\\AppJoke\\\\my-app\\\\screens\\\\TabTwoScreen.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { SearchBar } from 'react-native-elements';\nimport { Text, View } from \"../components/Themed\";\nimport * as Speech from 'expo-speech';\nimport data from \"../components/battute.json\";\n\nvar TabTwoScreen = function (_React$Component) {\n  _inherits(TabTwoScreen, _React$Component);\n\n  var _super = _createSuper(TabTwoScreen);\n\n  function TabTwoScreen(props) {\n    var _this;\n\n    _classCallCheck(this, TabTwoScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      search: \"\",\n      list: [],\n      char: \"\"\n    };\n\n    _this.updateSearch = function (evento) {\n      _this.setState({\n        search: evento\n      });\n\n      console.log(evento);\n      var lista = new Array();\n      data.forEach(function (item, index) {\n        if (item.includes(evento)) {\n          lista.push(item);\n        }\n      });\n\n      _this.setState({\n        list: lista\n      });\n    };\n\n    _this.searchKey = function () {\n      var word = _this.state.search;\n      console.log(word);\n      var lista = new Array();\n      data.forEach(function (item, index) {\n        if (item.includes(word)) {\n          lista.push(item);\n        }\n      });\n\n      _this.setState({\n        list: lista\n      });\n    };\n\n    _this.onClickJoke = function (joke) {\n      Speech.stop();\n      Speech.speak(joke);\n    };\n\n    return _this;\n  }\n\n  _createClass(TabTwoScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, React.createElement(SearchBar, {\n        platform: \"default\",\n        placeholder: \"Parola chiave...\",\n        onChangeText: this.updateSearch,\n        value: this.state.search,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }), React.createElement(SafeAreaView, {\n        style: styles.Scroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.Scroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, this.state.list.map(function (item) {\n        return React.createElement(View, {\n          key: item,\n          style: styles.ViewofScroll,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.onClickJoke(item);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: styles.TextofScroll,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }\n        }, item)));\n      }))));\n    }\n  }]);\n\n  return TabTwoScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  Scroll: {\n    backgroundColor: '#BDC3C7'\n  },\n  ViewofScroll: {\n    marginBottom: 10\n  },\n  TextofScroll: {\n    fontSize: 24,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  image: {\n    display: 'flex'\n  },\n  buttonAdd: {\n    alignItems: \"center\",\n    backgroundColor: \"#ADDD0D\",\n    padding: 10\n  }\n});\nexport default TabTwoScreen;","map":{"version":3,"sources":["C:/Users/Win 10 Pro/Desktop/Git/expo_project/AppJoke/my-app/screens/TabTwoScreen.tsx"],"names":["React","SearchBar","Text","View","Speech","data","TabTwoScreen","props","state","search","list","char","updateSearch","evento","setState","console","log","lista","Array","forEach","item","index","includes","push","searchKey","word","onClickJoke","joke","stop","speak","styles","Scroll","map","ViewofScroll","TextofScroll","Component","StyleSheet","create","backgroundColor","marginBottom","fontSize","textAlign","fontWeight","image","display","buttonAdd","alignItems","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {StyleSheet,ScrollView, TouchableOpacity, VirtualizedList, SafeAreaView,} from 'react-native';\nimport { SearchBar } from 'react-native-elements';\nimport { Text, View, } from \"../components/Themed\";\nimport * as Speech from 'expo-speech';\n\nimport data from '../components/battute.json';\nclass TabTwoScreen extends React.Component  {\n  \n  constructor(props:{}){\n    super(props);\n  }\n\n  state = {\n    search : \"\",\n    list: [],\n    char: \"\"\n  }\n\n  \n\n  updateSearch = (evento) => {\n    this.setState({ search: evento});\n    console.log(evento);\n    let lista = new Array\n    data.forEach(function (item, index) {\n      if(item.includes(evento)){\n        lista.push(item)\n      }\n    });\n    this.setState({\n      list : lista\n    })\n  };\n  \n\n  searchKey = () => {\n    let word = this.state.search\n    console.log(word)\n    let lista = new Array\n    data.forEach(function (item, index) {\n      if(item.includes(word)){\n        lista.push(item)\n      }\n    });\n    this.setState({\n      list : lista\n    })\n    \n  }\n\n  onClickJoke = (joke) => {\n    Speech.stop()\n    Speech.speak(joke)\n  }\n\n\n  render() {\n    return (\n      <View>\n        <SearchBar\n        platform= \"default\"\n        placeholder= \"Parola chiave...\"\n        onChangeText={this.updateSearch}\n        value={this.state.search}\n        />\n\n          {/*<ScrollView style={styles.Scroll}>\n          {this.state.search===\"\" ? \"\" : this.state.list.map((item) => {\n            return(\n                <View style={styles.ViewofScroll} >\n                  <TouchableOpacity  onPress={()=>{this.onClickJoke(item)}}>\n                    <Text style={styles.TextofScroll}>{item}</Text>\n                  </TouchableOpacity>\n              </View>\n            )\n          })}\n          </ScrollView>*/}\n        \n        <SafeAreaView style={styles.Scroll}>  \n        <ScrollView style={styles.Scroll}>\n          {this.state.list.map((item) => {\n            return(\n                <View key={item} style={styles.ViewofScroll} >\n                  <TouchableOpacity  onPress={()=>{this.onClickJoke(item)}}>\n                    <Text style={styles.TextofScroll}>{item}</Text>\n                  </TouchableOpacity>\n              </View>\n            )\n          })}\n          </ScrollView>\n        </SafeAreaView>\n      </View>\n\n\n      \n\n      \n      \n    );\n  }\n  \n}\n\nconst styles = StyleSheet.create({\n  Scroll:{\n    backgroundColor: '#BDC3C7'\n  },\n  ViewofScroll: {\n    marginBottom: 10\n  },\n  TextofScroll: {\n    fontSize: 24,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  image:{\n    display:'flex'\n  },\n  buttonAdd: {\n      alignItems: \"center\",\n      backgroundColor: \"#ADDD0D\",\n      padding: 10\n  }\n});\n\nexport default TabTwoScreen;\n\n\n\n"]},"metadata":{},"sourceType":"module"}